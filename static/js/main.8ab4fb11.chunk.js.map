{"version":3,"sources":["components/Header/index.js","storage.js","components/Editor/index.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Header","props","language","outType","onChange","className","defaultValue","style","width","value","localStorage","setItem","setDefaultLanguage","type","onClick","window","open","GithubOutlined","fontSize","Editor","useState","loading","setLoading","getItem","code","setCode","cssCode","setCSSCode","useEffect","parseCodeToCss","input","transformType","callback","res","error","options","mode","theme","lineNumbers","debounce","editor","data","setDefaultCode","copy","success","CopyOutlined","tip","spinning","App","console","log","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ab4fb11.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.less\";\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport { Select } from \"antd\";\nimport { setDefaultLanguage, setDefaultType } from \"../../storage\";\n\nconst { Option } = Select;\n\nexport default function Header(props) {\n  const { language, outType, onChange } = props;\n  return (\n    <div className=\"top-header\">\n      <div className=\"left-container\">\n        <div className=\"logo\">Parse To CSS</div>\n\n        <Select\n          defaultValue={language}\n          style={{ width: 120 }}\n          onChange={(value) => {\n            onChange({\n              language: value,\n            });\n            setDefaultLanguage(value);\n          }}\n        >\n          <Option value=\"react\">React</Option>\n          <Option value=\"vue\">Vue</Option>\n        </Select>\n\n        <Select\n          defaultValue={outType}\n          style={{ width: 120 }}\n          onChange={(value) => {\n            onChange({\n              outType: value,\n            });\n            setDefaultType(value);\n          }}\n        >\n          <Option value=\"less\">less</Option>\n          <Option value=\"css\">css</Option>\n          <Option value=\"sass\">sass</Option>\n        </Select>\n      </div>\n      <div\n        className=\"right-container\"\n        onClick={() => {\n          window.open(\"https://github.com/MrGaoGang/parse-jsx-to-css\");\n        }}\n      >\n        <GithubOutlined style={{ fontSize: 32 }} />\n      </div>\n    </div>\n  );\n}\n","export function getDefaultLanguage() {\n  return localStorage.getItem(\"parse-to-css:language\") || \"react\";\n}\nexport function setDefaultLanguage(language) {\n  return localStorage.setItem(\"parse-to-css:language\", language);\n}\n\nexport function getDefaultType() {\n  return localStorage.getItem(\"parse-to-css:out-type\") || \"less\";\n}\nexport function setDefaultType(type) {\n  return localStorage.setItem(\"parse-to-css:out-type\", type);\n}\n\nconst defaultCode = `\nimport React from 'react'\n\nexport default function App() {\n    return (\n        <div className='main-app'>\n            hello, mrgaogang.github.io\n        </div>\n    )\n}\n`;\n\nexport function getDefaultCode() {\n  return localStorage.getItem(\"parse-to-css:code\") || defaultCode;\n}\nexport function setDefaultCode(code) {\n  return localStorage.setItem(\"parse-to-css:code\", code);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport { CopyOutlined } from \"@ant-design/icons\";\nimport { message, Spin } from \"antd\";\nimport \"codemirror/mode/vue/vue\";\nimport \"codemirror/mode/jsx/jsx\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport parseCodeToCss from \"parse-jsx-to-css/lib/index\";\nimport \"./index.less\";\nimport debounce from \"lodash.debounce\";\nimport copy from \"copy-to-clipboard\";\nimport {getDefaultCode,setDefaultCode} from '../../storage'\n\n\nconst defaultCss = `\n.main-app{\n\n}\n`;\n\nexport default function Editor(props) {\n  const { language, outType } = props;\n  const [loading, setLoading] = useState(true);\n  const [code, setCode] = useState(getDefaultCode());\n  const [cssCode, setCSSCode] = useState(defaultCss);\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      parseCodeToCss({\n        input: code,\n        transformType: \"code\",\n        language: language,\n        outType: outType,\n        callback: (res) => {\n          setLoading(false);\n          setCSSCode(res);\n        },\n      });\n    } catch (error) {\n      message.error(`transform ${language} to ${outType} error!`);\n      setLoading(false);\n    }\n  }, [cssCode, code, language, outType,setLoading]);\n\n  return (\n    <div className=\"main-editor\">\n      <div className=\"input-editor\">\n        <CodeMirror\n          value={code}\n          options={{\n            mode: language === \"vue\" ? \"vue\" : \"jsx\",\n            theme: \"material\",\n            lineNumbers: true,\n          }}\n          onChange={debounce((editor, data, value) => {\n            setCode(value);\n            setDefaultCode(value);\n          }, 1500)}\n        />\n      </div>\n      <div className=\"output-editor\">\n        <div\n          className=\"copy-code\"\n          onClick={() => {\n            if (copy(cssCode)) {\n              message.success(\"copy success!\");\n            } else {\n              message.error(\"copy errorï¼Œplease select code and copy\");\n            }\n          }}\n        >\n          <CopyOutlined />\n        </div>\n        <Spin tip=\"loading...\" spinning={loading}>\n          <CodeMirror\n            value={cssCode}\n            options={{\n              mode: \"css\",\n              theme: \"material\",\n              lineNumbers: true,\n            }}\n            onChange={(editor, data, value) => {}}\n          />\n        </Spin>\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport React, { Component } from \"react\";\nimport Editor from \"./components/Editor\";\nimport { getDefaultType, getDefaultLanguage } from \"./storage\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: getDefaultLanguage(),\n      outType: getDefaultType(),\n    };\n  }\n\n  onChange = (data) => {\n    console.log(data);\n    this.setState({\n      ...this.state,\n      ...data,\n    });\n  };\n\n  render() {\n    const { language, outType } = this.state;\n    return (\n      <div className=\"main-app\">\n        <Header\n          language={language}\n          outType={outType}\n          onChange={this.onChange}\n        />\n\n        <Editor language={language} outType={outType} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}